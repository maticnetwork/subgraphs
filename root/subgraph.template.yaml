specVersion: 0.0.2
description: Indexes checkpoints and new deposits on root chain
repository: https://github.com/maticnetwork/subgraphs
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Rootchain
    network: {{ network }}
    source:
      address: "{{contracts.rootChain.address}}"
      abi: Rootchain
      startBlock: {{ contracts.rootChain.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - NewHeaderBlock
      abis:
        - name: Rootchain
          file: ./abis/Rootchain.json
      eventHandlers:
        - event: NewHeaderBlock(indexed address,indexed uint256,indexed uint256,uint256,uint256,bytes32)
          handler: handleNewHeaderBlock
      file: ./src/mappings/checkpoint.ts

  - kind: ethereum/contract
    name: WithdrawManager
    network: {{ network }}
    source:
      address: "{{contracts.withdrawManager.address}}"
      abi: WithdrawManager
      startBlock: {{ contracts.withdrawManager.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ExitStarted
        - ExitCancelled
        - Withdraw
      abis:
        - name: WithdrawManager
          file: ./abis/WithdrawManager.json
      eventHandlers:
        - event: ExitStarted(indexed address,indexed uint256,indexed address,uint256,bool)
          handler: handleExitStarted
        - event: ExitCancelled(indexed uint256)
          handler: handleExitCancelled
        - event: Withdraw(indexed uint256,indexed address,indexed address,uint256)
          handler: handleWithdraw
      file: ./src/mappings/withdraw-manager.ts
  
  - kind: ethereum/contract
    name: RootChainManager
    network: {{ network }}
    source:
      address: "{{contracts.rootChainManager.address}}"
      abi: RootChainManager
      startBlock: {{ contracts.rootChainManager.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - PredicateRegistered
        - TokenMapped
      abis:
        - name: RootChainManager
          file: ./abis/RootChainManager.json
      eventHandlers:
        - event: PredicateRegistered(indexed bytes32,indexed address)
          handler: handlePredicateRegistered
        - event: TokenMapped(indexed address,indexed address,indexed bytes32)
          handler: handleTokenMapped
      file: ./src/mappings/rootchain-manager.ts

  - kind: ethereum/contract
    name: StateSender
    network: {{ network }}
    source:
      address: "{{contracts.stateSender.address}}"
      abi: StateSender
      startBlock: {{ contracts.stateSender.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - StateSync
        - StateRegistration
      abis:
        - name: StateSender
          file: ./abis/StateSender.json
      eventHandlers:
        - event: StateSynced(indexed uint256,indexed address,bytes)
          handler: handleStateSynced
        - event: NewRegistration(indexed address,indexed address,indexed address)
          handler: handleNewRegistration
        - event: RegistrationUpdated(indexed address,indexed address,indexed address)
          handler: handleRegistrationUpdated
      file: ./src/mappings/state-sync.ts

  - kind: ethereum/contract
    name: StakingInfo
    network: {{ network }}
    source:
      address: "{{contracts.stakingInfo.address}}"
      abi: StakingInfo
      startBlock: {{ contracts.stakingInfo.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Validator
        - Delegator
        - StakingParams
        - Topup
      abis:
        - name: StakingInfo
          file: ./abis/StakingInfo.json
      eventHandlers:
        - event: ClaimFee(indexed address,indexed uint256)
          handler: handleClaimFee
        - event: ClaimRewards(indexed uint256,indexed uint256,indexed uint256)
          handler: handleClaimRewards
        # - event: ConfirmAuction(indexed uint256,indexed uint256,indexed uint256)
          # handler: handleConfirmAuction
        - event: DelegatorClaimedRewards(indexed uint256,indexed address,indexed uint256)
          handler: handleDelegatorClaimedRewards
        # - event: DelegatorRestaked(indexed uint256,indexed address,indexed uint256)
        #   handler: handleDelegatorRestaked
        - event: DelegatorUnstaked(indexed uint256,indexed address,uint256)
          handler: handleDelegatorUnstaked
        - event: DynastyValueChange(uint256,uint256)
          handler: handleDynastyValueChange
        - event: Jailed(indexed uint256,indexed uint256,indexed address)
          handler: handleJailed
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: ProposerBonusChange(uint256,uint256)
          handler: handleProposerBonusChange
        - event: Restaked(indexed uint256,uint256,uint256)
          handler: handleRestaked
        # - event: RewardUpdate(uint256,uint256)
        - event: ShareBurned(indexed uint256,indexed address,indexed uint256,uint256)
          handler: handleShareBurned
        - event: ShareMinted(indexed uint256,indexed address,indexed uint256,uint256)
          handler: handleShareMinted
        - event: SignerChange(indexed uint256,uint256,indexed address,indexed address,bytes)
          handler: handleSignerChange
        # - event: Slashed(indexed uint256,indexed uint256)
        - event: StakeUpdate(indexed uint256,indexed uint256,indexed uint256)
          handler: handleStakeUpdate
        - event: Staked(indexed address,indexed uint256,uint256,indexed uint256,uint256,uint256,bytes)
          handler: handleStaked
        # - event: StartAuction(indexed uint256,indexed uint256,indexed uint256)
        - event: ThresholdChange(uint256,uint256)
          handler: handleThresholdChange
        - event: TopUpFee(indexed address,indexed uint256)
          handler: handleTopUpFee
        - event: UnJailed(indexed uint256,indexed address)
          handler: handleUnJailed
        - event: UnstakeInit(indexed address,indexed uint256,uint256,uint256,indexed uint256)
          handler: handleUnstakeInit
        - event: Unstaked(indexed address,indexed uint256,uint256,uint256)
          handler: handleUnstaked
        - event: UpdateCommissionRate(indexed uint256,indexed uint256,indexed uint256)
          handler: handleUpdateCommissionRate
      file: ./src/mappings/staking-info.ts

  - kind: ethereum/contract
    name: StakingNft
    network: {{ network }}
    source:
      address: "{{contracts.stakingNFT.address}}"
      abi: StakingNft
      startBlock: {{ contracts.stakingNft.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Transfer
      abis:
        - name: StakingNFT
          file: ./abis/StakingNft.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
      file: ./src/mappings/staking-nft.ts
